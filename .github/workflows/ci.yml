name: CI Workflow

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

env:
  SONAR_ORG: nghiangoclv
  SONAR_PJT: nghiangoclv_nextjs-app

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: yarn install

      - name: Run Lint
        run: yarn lint

      - name: Run Tests with Coverage
        run: yarn test --coverage

      # - name: Upload Coverage Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage
      #     path: ./coverage/lcov.info

  # sonar-scanner:
  #   runs-on: ubuntu-latest
  #   needs: lint-test
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Download Coverage Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: coverage
  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.projectKey=${{ env.SONAR_PJT }}
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: Check Sonar Quality Gate Status
        id: sonar-gate-status
        run: |
          sonar_quality_gate_status=$(sonar-scanner-cli quality-gate --url $SONAR_HOST_URL --token $SONAR_TOKEN --projectKey $SONAR_PJT --output-format json)
          echo "::set-output name=sonar-status::$sonar_quality_gate_status"

      - name: Output Sonar Quality Gate Status
        run: echo "Sonar Quality Gate Status:" ${{ steps.sonar-gate-status.outputs.sonar-status }}
